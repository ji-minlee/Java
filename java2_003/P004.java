package java2_003;

public class P004 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// #1. 6) 반올림, 버림처리, 20220414, k32_이지민, 각 자리수에 따라 반올림, 버림 처리를 해보자
		// # 10원 이하 버림
		int k32_ii = 12345;		// 정수 변수 k32_ii를 12345로 선언
		int k32_j = (k32_ii / 10) * 10;		// 정수 변수 k32_j = (k32_ii / 10) * 10으로 선언
											// /10 > 10원 이하 절삭 (1의 자리가 없어짐) : 1234
											// *10 > 다시 10을 곱하면 : 12340 (버림 처리 완료)
		System.out.printf("#4-1 : %d\n" , k32_j); // 버림처리 완료된 변수 k32_j 출력 (12340)
		
		//# 10원 이하 반올림
		k32_ii = 12345;		// k32_ii = 12345 선언
		k32_j = ((k32_ii + 5) / 10) * 10;	// 10원 이하 반올림 위해 +5 (5 이상이면 반올림)
											//  /10 * 10은 버림의 과정과 이유가 같다 (위의 내용 참조)
		System.out.printf("#4-2 : %d\n", k32_j);	// 반올림 처리 완료된 변수 k32_j 출력 (12350)
		
		//#4-3. 10원 이하 반올림
		k32_ii = 12344;		// k32_ii = 12344 선언
		k32_j = ((k32_ii + 5) / 10) *10;	// 위의 반올림 과정과 똑같이 진행 but 12344이므로 결과는 다름
		
		System.out.printf("#4-3 : %d\n", k32_j);	// 반올림 처리 완료된 변수 k32_j 출력 
													// > 12340 (12344였으므로 올바르게 처리 완료)	
		
		//#4-4. 100원 이하 버림
		k32_ii = 12345;		// k32_ii = 12345 선언
		k32_j = (k32_ii / 100) * 100;		// /100 > 100원 이하 절삭 : 123
											// *100 > 다시 100을 곱하면 : 12300 (버림 처리 완료)
		System.out.printf("#4-4 : %d\n", k32_j);	// 버림 처리 완료된 변수 k32_j 출력 (12300)
		
		//#4-5. 100원 이하 올림
		k32_j = (k32_ii+100) / 100 * 100;	// k32_ii가 12345이다. 
											// +100 > 올림은 무조건 +100이기 때문 (12445)
											// /100 > 100원 이하 절삭 (124)
											// *100 > 다시 100을 곱하면 12400 (올림 처리 완료)
		System.out.printf("#4-5 : %d\n", k32_j);	// 올림 처리 완료된 변수 k32_j 출력 (12400)
		
		//#4-6. 1000원 이하 버림
		k32_j = (k32_ii / 1000) * 1000;		// k32_ii가 12345이다. 
											// /1000 > 1000원 이하 절삭 (12)
											// *1000 > 다시 1000을 곱하면 12000 (버림 처리 완료)
		System.out.printf("#4-6 : %d\n", k32_j);	// 버림 처리 완료된 변수 k32_j 출력 (12000)
		
		//#4-7. 1000원 이하 올림
		k32_j = (k32_ii+500) / 1000 * 1000;		// k32_ii가 12345이다. 
												// +500 > 반올림은 500 이상이면 반올림 (12845)
												// /1000 > 1000원 이하 절삭 (12)
												// *1000 > 1000을 곱하면 12000 (반올림 처리 완료)
		System.out.printf("#4-7 : %d\n", k32_j);	// 반올림 처리 완료된 변수 k32_j 출력 (12000)
	}

}
